<?php

/**
 * @file
 * Provides server template functionality for each cloud sub-system.
 * Works with Cloud module.
 *
 */
\Drupal::moduleHandler()->loadInclude('cloud'                 , 'inc', 'cloud.constants'                 );
\Drupal::moduleHandler()->loadInclude('cloud_server_template', 'inc', 'cloud_server_template.constants');
\Drupal::moduleHandler()->loadInclude('cloud_server_template', 'inc', 'cloud_server_template'          );
\Drupal::moduleHandler()->loadInclude('cloud_server_template', 'inc', 'cloud_server_template.db'       );

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function cloud_server_template_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the cloud_server_template module.
    case 'help.page.cloud_server_template':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Cloud Server Template') . '</p>';
      $output = '<p>' . t('The cloud_server_template module creates a user interface for users to manage clouds. Users can create server templates.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function cloud_server_template_theme() {
  $theme = [];

  $theme['cloud_server_template'] = array(
    'render element' => 'elements',
    'file' => 'cloud_server_template.page.inc',
    'template' => 'cloud_server_template',
  );
  return $theme;
}

// /**
//  * Implements hook_menu().
//  */
// function cloud_server_template_menu() {
//   
//   $cloud_list = cloud_get_all_clouds();
//   $cloud_name_list = cloud_get_all_clouds_display_name();
//   $items = array();
//   
//   // server_template Menu
//   $items['design/server_template/getdata'] = array(
//     'title' => 'Server Template Get data',
//     'page callback' => '_cloud_server_template_getdata',
//     'page arguments' => array('cloud_server_template'),
//     'access arguments' => array('list server templates'),
//     'file' => '',
//     'type' => MENU_CALLBACK,
//   );
// 
//   $items['design'] = array(
//     'title' => 'Design',
//     'description' => 'Get a quick synopsis of Server Template.',
//     'page callback' => 'cloud_server_template_design',
//     'page arguments' => array('list', isset($cloud_list[0]) ? $cloud_list[0] : NULL, '', 'all'),
//     'access arguments' => array('list server templates'),
//     'weight' => -5,
//     'file' => '',
//   );
// 
//   $items['design/server_template'] = array(
//     'title' => 'Template',
//     'description' => 'Get a quick synopsis of Template.',
//     'page callback' => 'cloud_server_template_notify',
//     'page arguments' => array('', 'list', FALSE, array(), 'all'), //properly call cloud_server_template_notify and grab all clouds
//     'weight' => 5,
//     'access arguments' => array('list server templates'),
//     'file' => '',
//     'type' => MENU_NORMAL_ITEM,
//   );
// 
//   //This has to exist because Drupal will
//   //only show MENU_LOCAL_TASKS if there are
//   //more than one
//   $items['design/server_template/all'] = array(
//     'title' => 'All',
//     'description' => 'Get a quick synopsis of Template.',
//     'page callback' => 'cloud_server_template_notify',
//     'page arguments' => array('', 'list', FALSE, array(), 'all'),
//     'access arguments' => array('list server templates'),
//     'file' => '',
//     'type' => MENU_DEFAULT_LOCAL_TASK,
//     'weight' => -1,
//   );
// 
//   foreach ($cloud_list as $cloud_context) {
//     $items['design/server_template/' . $cloud_context . '/list'] = array(
//       'title' => $cloud_name_list[$cloud_context],
//       'page callback' => 'cloud_server_template_notify'  ,
//       'page arguments' => array('', 'list', $cloud_context)  ,
//       'access arguments' => array(t('list server templates')),
//       'file' => '',
//       'type' => MENU_LOCAL_TASK,
//     );
//     $items['design/server_template/' . $cloud_context . '/create'] = array(
//       'title' => 'Add/Edit Template',
//       'page callback' => 'cloud_server_template_notify',
//       'page arguments' => array('', 'create', $cloud_context),
//       'access arguments' => array('create server template'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//     $items['design/server_template/' . $cloud_context . '/%/edit'] = array(
//       'title' => 'Add/Edit Template',
//       'page callback' => 'cloud_server_template_notify',
//       'page arguments' => array(3, 'create', $cloud_context),
//       'access arguments' => array('edit server template'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//     $items['design/server_template/' . $cloud_context . '/%/view'] = array(
//       'title' => 'Template Info',
//       'page callback' => 'cloud_server_template_notify',
//       'page arguments' => array(3, 'view', $cloud_context),
//       'access arguments' => array('view server template'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//     $items['design/server_template/' . $cloud_context . '/%/delete'] = array(
//       'title' => 'Delete',
//       'page callback' => 'cloud_server_template_delete',
//       'page arguments' => array(3, $cloud_context),
//       'access arguments' => array('delete server templates'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//     $items['design/server_template/' . $cloud_context . '/%/copy'] = array(
//       'title' => 'Copy',
//       'page callback' => 'cloud_server_template_copy',
//       'page arguments' => array(3, $cloud_context),
//       'access arguments' => array('copy server template'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//     $items['design/server_template/' . $cloud_context . '/%/launch'] = array(
//       'title' => 'Launch',
//       'page callback' => 'cloud_perform_action',
//       'page arguments' => array(3, 'launch', $cloud_context),
//       'access arguments' => array('launch server template'),
//       'file' => '',
//       'type' => MENU_CALLBACK,
//     );
//   }
//   return $items;
// }
// 
// 
// function _cloud_server_template_getdata($src = '') {
// 
//   if ( $src == NULL || empty($src) ) {
//     drupal_goto( CLOUD_SERVER_TEMPLATES_PATH . '/list' );
//   }
//   else {
//     drupal_goto( $src );
//   }
//   return;
// }
// 
// 
// /**
//  * Implements hook_permission().
//  */
// function cloud_server_template_permission() {
// 
//   return array(
//     'create server template' => array(
//       'title' => t('create server template'     ),
//       'description' => t('Permission to create server templates'),
//     ),
//     'view server template' => array(
//       'title' => t('view server template'       ),
//       'description' => t('Permission to view server templates'),
//     ),
//     'list server templates' => array(
//       'title' => t('list server templates'      ),
//       'description' => t('Permission to view all server templates'),
//     ),
//     'copy server template' => array(
//       'title' => t('copy server template'       ),
//       'description' => t('Permission to clone server template'),
//     ),
//     'edit server template' => array(
//       'title' => t('edit server template'       ),
//       'description' => t('Permission to edit a server template'),
//     ),
//     'delete server template' => array(
//       'title' => t('delete server template'     ),
//       'description' => t('Permission to delete a server template'),
//     ),
//     'launch server template' => array(
//       'title' => t('launch server template'     ),
//       'description' => t('Permission to launch server template'),
//     ),
//     'set scripts and alerts' => array(
//       'title' => t('set scripts and alerts'     ),
//       'description' => t('Permission to set scripts and alerts'),
//     ),
//   );
// }
// 
// /**
//  * Implements hook_theme().
//  */
// function cloud_server_template_theme() {
//   return array(
//     'cloud_server_template_list' => array(
//       'render element' => 'form',
//       'file' => 'cloud_server_template.inc',
//     ),
//   );
// }
// 
// 
// /**
//  * Add a hook to return system script definitions.
//  * System templates are simply array definitions
//  * that can be used to add into the template table
//  */
// function cloud_server_template_system_templates() {
//   $templates = array();
//   $templates = \Drupal::moduleHandler()->invokeAll('cloud_server_system_templates');
//   return $templates;
// }
// 
// 
// /**
//  * Server Template module when listed, create
//  *
//  * @param string $op
//  *   the module operation: list, create
//  * @param string $module
//  *   the name of the affected module.
//  */
// function cloud_server_template_notify($templateid = '', $op, $cloud_context = '', $params = array(), $all = '' ) {
//   if (!isset($cloud_context)) {
//     $output = t('No clouds are configured for usage. Please add a cloud or enable a sub-cloud module');
//     return $output;
//   }
//   $params['templateid'] = $templateid;
//   $params['all'       ] = $all;
//   $params['cloud_context'] = $cloud_context;
// 
//   $module = cloud_get_module($cloud_context); //get the module stored in the database
//   $output = '';
//   switch ($op) {
//     case 'list':
//       if ($cloud_context == FALSE && $all == 'all') {
//         $output = _cloud_server_template_list('cloud_server_template', '', $params);
//       }
//       else {
//         $output = \Drupal::moduleHandler()->invoke($module, 'server_template', [$op, $params]);
//       }
//       break;
//     case 'create':
//       $output   = \Drupal::moduleHandler()->invoke($module, 'server_template', [$op, $params]);
//       break;
//     case 'new_theme':
//       $output = \Drupal::moduleHandler()->invoke($module, 'server_template', [$op, $params]);
//       break;
//     case 'view':
//       $output = \Drupal::moduleHandler()->invoke($module, 'server_template', [$op, $params]);
//       break;
//     case 'cluster_form':
//       $output = \Drupal::moduleHandler()->invoke($module, 'server_template', [$op, $params]);
//       break;
//   }
//   if (empty($output)) {
//     $output = t('The sub-cloud @cloud_context does not implement hook_server_template().', array('@cloud_context' => $cloud_context));
//   }
//   return $output;
// }
// 
// /**
//  * Implements hook_cloud_save().
//  */
// function cloud_server_template_cloud_save($op, $cloud) {
//   //only implement if is new
//   if ($op == 'create') {
//     if (isset($cloud->instance_types)) {
//       //add them into the database
//       $cloud_type = $cloud->cloud_name;
//       $query = 'INSERT INTO {' . CLOUD_INSTANCE_TYPE_TABLE . '} (instance_type, description, display_order, cloud_type) VALUES ';
//       $i = 0;
//       foreach ($cloud->instance_types as $key => $val) {
//         $query .= " ('" . $key . "', '" . $val . "', $i, '" . $cloud_type . "') ";
//         if ($i < count($cloud->instance_types) - 1 ) {
//           $query .= ' , ';
//         }
//         $i++;
//       }
//       db_query($query);
//     }
//   }
// }
// 
// /**
//  * Implements hook_cloud_delete()
//  */
// function cloud_server_template_cloud_delete($cloud_name) {
//   db_query('DELETE FROM {' . CLOUD_INSTANCE_TYPE_TABLE . " } where cloud_type=:cloud_type ", array(':cloud_type' => $cloud_name));
// }
// 
// /**
//  * Redirect to main server template list
//  */
// function cloud_server_template_design($op, $cloud_context = '', $params = array() ) {
//   return drupal_goto('design/server_template');
// }
